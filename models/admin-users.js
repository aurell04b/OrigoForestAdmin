// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const AdminUsers = sequelize.define('adminUsers', {
    email: {
      type: DataTypes.STRING,
      defaultValue: "",
      allowNull: false,
      validate: {
        isEmail: true,
        len: [10, 25]
      },
    },
    encryptedPassword: {
      type: DataTypes.STRING,
      defaultValue: "",
      allowNull: false,
    },
    resetPasswordToken: {
      type: DataTypes.STRING,
    },
    resetPasswordSentAt: {
      type: DataTypes.DATE,
    },
    rememberCreatedAt: {
      type: DataTypes.DATE,
    },
    signInCount: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    currentSignInAt: {
      type: DataTypes.DATE,
    },
    lastSignInAt: {
      type: DataTypes.DATE,
    },
    currentSignInIp: {
      type: DataTypes.STRING,
    },
    lastSignInIp: {
      type: DataTypes.STRING,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
      'defaultValue': 0
    },
    right: {
      type: DataTypes.INTEGER,
      defaultValue: "",
    },
    firstname: {
      type: DataTypes.STRING,
    },
  }, {
    tableName: 'admin_users',
    underscored: true,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the Order for this model.
  AdminUsers.beforeSave((AdminUsers, options) => {
    AdminUsers.updated_at = new Date().getDate();
  }
  );

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  AdminUsers.associate = (models) => {
  };

  return AdminUsers;
};
